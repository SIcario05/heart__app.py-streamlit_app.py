# -*- coding: utf-8 -*-
"""heart__app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oKGT6dVLWzBvtIULopMOZIYlURxJwxHf
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import joblib

# load dataset
df = pd.read_csv('./heart_failure_clinical_records_dataset.csv')
df.head()

# STEP 3: split X and Y
X = df.drop('DEATH_EVENT', axis=1)
Y = df['DEATH_EVENT']

# STEP 4: train-test split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# STEP 5: scale features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# STEP 6: define MLP model
model = Sequential([
    Dense(32, activation='relu', input_shape=(X_train_scaled.shape[1],)),
    Dense(16, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])

# STEP 7: train the model
history = model.fit(X_train_scaled, Y_train, epochs=50, batch_size=16, validation_split=0.2)

# STEP 8: evaluate
loss, acc = model.evaluate(X_test_scaled, Y_test)
print("Test accuracy:", acc)

# STEP 9: save the model
model.save('heart_mlp_model.h5')

# STEP 10: save the scaler
joblib.dump(scaler, 'scaler.pkl')

# STEP 11: download model and scaler
files.download('heart_mlp_model.h5')
files.download('scaler.pkl')
